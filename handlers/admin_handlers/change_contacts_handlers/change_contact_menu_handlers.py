from aiogram import F, types, Router
from aiogram.fsm.context import FSMContext

from keyboards import cancel_keyboard, admin_change_category_products
from storage import AdminToolsModule

from config import moto_db


router = Router()


@router.message(AdminToolsModule.change_contact_menu, F.text.casefold() == "–∏–∑–º–µ–Ω–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ üìÑ")
async def adding_contact_menu_handler(message: types.Message, state: FSMContext):
    await state.set_state(AdminToolsModule.change_contact_main)
    await message.answer(text="–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –º–µ–Ω—é –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.",
                         reply_markup=cancel_keyboard)


@router.message(AdminToolsModule.change_contact_menu, F.text.casefold() == "–¥–æ–±–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ ‚ûï")
async def adding_contact_menu_handler(message: types.Message, state: FSMContext):
    await state.set_state(AdminToolsModule.adding_contact_title)
    await state.update_data(step=[AdminToolsModule.change_contact_menu,])
    await message.answer(text="–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –º–µ–Ω—é –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.\n–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞.",
                         reply_markup=cancel_keyboard)


@router.message(AdminToolsModule.change_contact_menu, F.text.casefold() == "—É–¥–∞–ª–∏—Ç—å –¥–∞–Ω–Ω—ã–µ ‚ùå")
async def adding_contact_menu_handler(message: types.Message, state: FSMContext):
    await state.set_state(AdminToolsModule.delete_contact_main)
    await message.answer(text="–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –º–µ–Ω—é —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.",
                         reply_markup=cancel_keyboard)


@router.message(AdminToolsModule.change_contact_menu)
async def wrong_adding_contact_menu_handler(message: types.Message):
    await message.answer(text="–Ø –í–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é.\n–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞.",
                         reply_markup=cancel_keyboard)
